* Alignment of reads, marking duplicates and retreiving discordant and split reads
** Input files
1. fastq files for read 1 and read 2
2. reference genome (hg38)
** Softwares required
1. bwa mem
2. samtools
3. samblaster
** Command
1. Alignment of reads : bwa mem -M -t -a ref_genome Read1.fq Read2.fq |samblaster -M -r -d sample.discord.sam -s sample.split.sam -u /unmapped/sample | samtools view -Sb > sample.dup_RG.bam
2. sorting bam file and indexing: samtools sort -O BAM -@10 -o sample.sortedCO.bam sample.dup_RG.bam && samtools index sample.sortedCO.bam
3. sorting bam file containing discordant and split reads:
samtools sort -O BAM -@10 -o sample.discord.sortedCO.bam sample.discord.sam && samtool index sample.discord.sortedCO.bam
samtools sort -O BAM -@10 -o sample.split.sortedCO.bam sample.split.sam && samtool index sample.split.sortedCO.bam
* Predict SVs using tools
** Delly
*** Command
1. delly2 call -t DEL -x human.hg38.excl.tsv  -o DEL_tumor.bcf -g ref_genome sample.sortedCO.bam
2. delly2 call -t DUP -x human.hg38.excl.tsv  -o DUP_tumor.bcf -g ref_genome sample.sortedCO.bam
3. delly2 call -t INV -x human.hg38.excl.tsv  -o TRA_tumor.bcf -g ref_genome sample.sortedCO.bam
4. delly2 call -t TRA -x human.hg38.excl.tsv  -o TRA_tumor.bcf -g ref_genome sample.sortedCO.bam

** Lumpy
lumpyexpress -B sample.sortedCO.bam -D sample.discord.sortedCO.bam -S sample.split.sortedCO.bam -v -o tumor.vcf
** SvABA
1. svaba run -t sample.sortedCO.bam -p 20 -G ref_genome -a tumor --all-contigs
2. grep -v \"^#\" tumor.svaba.unfiltered.sv.vcf |sort -nk3 > tumor.svaba.sort.sv.vcf
** Long Ranger
longranger wgs --id=Sample_Linked --sample=sample --fastqs=fastq_folder/ --reference=/human/refdata-GRCh38-2.1.0/ --lanes=1,2 --indices=SI-GA-D10 --vcmode=freebayes --somatic --localcores=20 --localmem=20
** NAIBR
python NAIBR.py example.config
** GROC-SV
grocsvs --multiprocessing config.json
